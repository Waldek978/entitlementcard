version: 2.1
orbs:
  gradle: circleci/gradle@2.2.0
workflows:
  backend:
    jobs:
      - build
      - pack:
          requires:
            - build
      - hold:
          requires:
            - pack
          type: approval
          filters:
            branches:
              only: main
      - deploy:
          requires:
            - hold
          filters:
            branches:
              only: main
      
jobs:
  build:
    environment:
      # Configure the JVM and Gradle to avoid OOM errors
      _JAVA_OPTIONS: "-Xmx3g"
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"
    docker:
      - image: circleci/openjdk:11.0.3-jdk-stretch
    working_directory: ~/project/backend
    steps:
      - checkout:
          path: ~/project
      - restore_cache:
          key: v2-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - restore_cache:
          key: v2-gradle-cache-{{ checksum "build.gradle.kts" }}
      - run: ./gradlew build
      - save_cache:
          paths:
            - .gradle/wrapper
          key: v2-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - save_cache:
          paths:
            - .gradle/caches
          key: v2-gradle-cache-{{ checksum "build.gradle.kts" }}
      - store_artifacts:
          path: build/libs
      - persist_to_workspace:
          root: . # why is this not an optional parameter? :shaking_head:
          paths:
            - build/distributions/*
  pack:
    docker:
      - image: cimg/base:2020.01
    working_directory: ~/project/backend
    steps:
      - checkout:
          path: ~/project
      - attach_workspace:
          at: /tmp/workspace
      - run: cp -r /tmp/workspace/** .
      - run: ../scripts/backend_deb.sh
      - store_artifacts:
          path: build/*.deb
      - persist_to_workspace:
          root: .
          paths:
            - build/*.deb
  deploy:
    docker:
      - image: cimg/base:2020.01
    working_directory: ~/project/backend
    steps:
      - checkout:
          path: ~/project
      - run: ../scripts/backend_deb.sh
      - store_artifacts:
          path: build/*.deb
