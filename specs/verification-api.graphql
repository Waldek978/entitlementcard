schema {
  query: Query
  mutation: Mutation
}

"Directs the executor to include this field or fragment only when the `if` argument is true"
directive @include(
    "Included when true."
    if: Boolean!
  ) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"Directs the executor to skip this field or fragment when the `if`'argument is true."
directive @skip(
    "Skipped when true."
    if: Boolean!
  ) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"Marks the field or enum value as deprecated"
directive @deprecated(
    "The reason for the deprecation"
    reason: String = "No longer supported"
  ) on FIELD_DEFINITION | ENUM_VALUE

"Exposes a URL that specifies the behaviour of this scalar."
directive @specifiedBy(
    "The URL that specifies the behaviour of this scalar."
    url: String!
  ) on SCALAR

type Mutation {
  "Stores a new digital EAK"
  addCard(card: CardInput!): Boolean!
}

type Query {
  "Returns whether there is a card with that hash registered for that this TOTP is currently valid"
  verifyCard(card: CardVerificationModelInput!): Boolean!
}

"Long type"
scalar Long

"Built-in Short as Int"
scalar Short

input CardInput {
  expirationDate: Long!
  hashModel: String!
  totpSecret: [Short!]!
}

input CardVerificationModelInput {
  hashModel: String!
  totp: Int!
}
